'use client'
import { useState } from 'react'

export default function Observations() {
  const [studentCode, setStudentCode] = useState('SV001')
  const [courseCode, setCourseCode] = useState('IMMU101')
  const [loading, setLoading] = useState(false)
  const levels = ['Không đạt','Đạt','Khá']
  const [values, setValues] = useState({ i1: 1, i2: 1, i3: 1, i4: 1, i5: 1, i6: 1 }) // mặc định Đạt

  async function onSave() {
    setLoading(true)
    const res = await fetch('/api/observations', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify({
        student_code: studentCode,
        course_code: courseCode,
        rubric_name: 'Rubric A - IMMU101',
        items: Object.entries(values).map(([code, v]) => ({ code, level_rank: Number(v) }))
      })
    })
    const json = await res.json()
    alert(res.ok ? `Đã lưu observation: ${json.id}` : `Lỗi: ${json.error || json.message}`)
    setLoading(false)
  }

  return (
    <div className="mx-auto max-w-6xl px-4 py-10">
      <h1 className="text-2xl font-semibold">Chấm & Minh chứng</h1>
      <div className="card mt-6 space-y-4">
        <div className="grid sm:grid-cols-3 gap-3">
          <input className="border rounded-lg px-3 py-2" value={studentCode} onChange={e=>setStudentCode(e.target.value)} placeholder="Mã SV (VD: SV001)" />
          <input className="border rounded-lg px-3 py-2" value={courseCode} onChange={e=>setCourseCode(e.target.value)} placeholder="Mã học phần (VD: IMMU101)" />
          <input className="border rounded-lg px-3 py-2" value="Rubric A - IMMU101" readOnly />
        </div>

        <div className="grid md:grid-cols-2 gap-4">
          {Object.keys(values).map(code => (
            <div key={code} className="flex items-center justify-between border rounded-xl px-3 py-2">
              <div>Item {code.toUpperCase()}</div>
              <select className="border rounded-lg px-2 py-1"
                value={values[code as keyof typeof values]}
                onChange={e => setValues(v => ({...v, [code]: parseInt(e.target.value)}))}>
                {levels.map((l,idx) => <option key={l} value={idx}>{l}</option>)}
              </select>
            </div>
          ))}
        </div>

        <button disabled={loading} onClick={onSave}
          className="px-4 py-2 rounded-lg bg-[var(--brand-primary)] text-white">
          {loading ? 'Đang lưu...' : 'Lưu & tính CLO'}
        </button>
      </div>
    </div>
  )
}
